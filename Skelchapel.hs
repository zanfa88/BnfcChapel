module Skelchapel where

-- Haskell module generated by the BNF converter

import Abschapel
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident str  -> failure x


transBoolean :: Boolean -> Result
transBoolean x = case x of
  Boolean_true  -> failure x
  Boolean_false  -> failure x


transProgram :: Program -> Result
transProgram x = case x of
  Prog stmts  -> failure x


transStmt :: Stmt -> Result
transStmt x = case x of
  Assgn lexpr assignment_op rexpr  -> failure x
  Cond stmtcondition  -> failure x
  While stmtwhile  -> failure x
  Do stmtdo  -> failure x
  For stmtfor  -> failure x
  Jump stmtjump  -> failure x
  Write stmtwrite  -> failure x
  Read stmtread  -> failure x
  VarD stmtvar  -> failure x
  DFunc deffunc  -> failure x
  CFunc callfunc  -> failure x


transLExpr :: LExpr -> Result
transLExpr x = case x of
  Id id  -> failure x
  ArrayEl lexpr rexpr  -> failure x


transRExpr :: RExpr -> Result
transRExpr x = case x of
  Eby rexpr1 rexpr2  -> failure x
  Ecount rexpr1 rexpr2  -> failure x
  Ealign rexpr1 rexpr2  -> failure x
  Elor rexpr1 rexpr2  -> failure x
  Eland rexpr1 rexpr2  -> failure x
  Eeq rexpr1 rexpr2  -> failure x
  Eneq rexpr1 rexpr2  -> failure x
  Eleq rexpr1 rexpr2  -> failure x
  Egeq rexpr1 rexpr2  -> failure x
  El rexpr1 rexpr2  -> failure x
  Eg rexpr1 rexpr2  -> failure x
  Erange rexpr1 rexpr2  -> failure x
  Eadd rexpr1 rexpr2  -> failure x
  Esub rexpr1 rexpr2  -> failure x
  Ebitor rexpr1 rexpr2  -> failure x
  Ebitxor rexpr1 rexpr2  -> failure x
  Ebitand rexpr1 rexpr2  -> failure x
  Eleft rexpr1 rexpr2  -> failure x
  Eright rexpr1 rexpr2  -> failure x
  Eupos rexpr  -> failure x
  Euneg rexpr  -> failure x
  Emul rexpr1 rexpr2  -> failure x
  Ediv rexpr1 rexpr2  -> failure x
  Emod rexpr1 rexpr2  -> failure x
  Econs constant  -> failure x
  LExprR lexpr  -> failure x


transAssignment_op :: Assignment_op -> Result
transAssignment_op x = case x of
  AssgnBase  -> failure x


transStmtWrite :: StmtWrite -> Result
transStmtWrite x = case x of
  WriteInt n  -> failure x
  WriteReal d  -> failure x


transStmtRead :: StmtRead -> Result
transStmtRead x = case x of
  ReadInt n  -> failure x
  ReadReal d  -> failure x


transStmtCondition :: StmtCondition -> Result
transStmtCondition x = case x of
  If1 rexpr stmt  -> failure x
  If2 rexpr stmts  -> failure x


transStmtWhile :: StmtWhile -> Result
transStmtWhile x = case x of
  WhileDo rexpr stmt  -> failure x


transStmtDo :: StmtDo -> Result
transStmtDo x = case x of
  SDo stmts rexpr  -> failure x


transStmtFor :: StmtFor -> Result
transStmtFor x = case x of
  SForDo rexpr aggr stmts  -> failure x


transAggr :: Aggr -> Result
transAggr x = case x of
  ForAggr constant1 constant2  -> failure x


transStmtJump :: StmtJump -> Result
transStmtJump x = case x of
  Break  -> failure x
  Continue  -> failure x


transParam :: Param -> Result
transParam x = case x of
  Pval rexpr  -> failure x
  Pref rexpr  -> failure x


transConstant :: Constant -> Result
transConstant x = case x of
  Int n  -> failure x


transStmtVar :: StmtVar -> Result
transStmtVar x = case x of
  SVarBlock blockvars  -> failure x
  SVarCon id typespec rexpr  -> failure x


transBlockVar :: BlockVar -> Result
transBlockVar x = case x of
  SBlockVar id typespec rexpr  -> failure x


transDefFunc :: DefFunc -> Result
transDefFunc x = case x of
  SDefFunc id args stmts  -> failure x


transCallFunc :: CallFunc -> Result
transCallFunc x = case x of
  SCallFunc id rexprs  -> failure x


transArg :: Arg -> Result
transArg x = case x of
  SArg id typespec  -> failure x


transTypeSpec :: TypeSpec -> Result
transTypeSpec x = case x of
  BasTyp basictype  -> failure x


transBasicType :: BasicType -> Result
transBasicType x = case x of
  BasicType_bool  -> failure x
  BasicType_uint  -> failure x
  BasicType_int  -> failure x
  BasicType_real  -> failure x
  BasicType_imag  -> failure x
  BasicType_complex  -> failure x
  BasicType_string  -> failure x



